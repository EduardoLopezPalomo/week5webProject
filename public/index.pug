doctype html
html
  head
    title Recipe Page
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css")
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js")

  body
    nav
      div.nav-wrapper
        a.brand-logo(href="#") Recipe App
        form
          div.input-field
            input#search-input(type="search", placeholder="Search recipes")


    div.container
      div.row#recipe-details
        div.col
          h1 Recipe Details
          div
            p Name: #{recipe.name}
            h3 Instructions:
            ul
              each instruction in recipe.instructions
                li= instruction
            h3 Ingredients:
            ul
              each ingredient in recipe.ingredients
                li= ingredient

      div.row
        div.col
          h1 Add New Recipe
          input(type="text", id="name-text", placeholder="Recipe Name")
          div.file-field.input-field
          h4 Ingredients
          textarea(id="ingredients-text", placeholder="Enter ingredients")
          button.btn(type="button", id="add-ingredient") Add ingredient
          ul(id="ingredients-list")
          h4 Instructions
          textarea(id="instructions-text", placeholder="Enter instructions")
          button.btn(type="button", id="add-instruction") Add instruction
          ul(id="instructions-list")

          div#category-container
            h4 Categories
            each category in categories
              label.v-checkbox
                input(type="checkbox", id=`${category._id}`, name="category", value=`${category._id}`)
                span.v-label #{category.name}
          div.row
            div.col
              h1 Image Uploader
              form(id="upload-form", enctype="multipart/form-data")
                div.file-field.input-field
                  div.btn
                    span File
                    input#image-input(type="file", name="image", accept="image/*", multiple)      
                  div.file-path-wrapper
                    input.file-path.validate(type="text", placeholder="Upload one or more files")
                //button.btn(type="submit") Upload

          button.btn(type="button", id="submit") Submit
  script.
      const addIngrident = document.getElementById('add-ingredient');
      const addInstruction = document.getElementById('add-instruction');
      const submit = document.getElementById('submit');
      const upload = document.getElementById('upload-form');

      fetch('/recipe/pizza') 
          .then(response => response.json())
          .then(recipe => {
              const recipeDetails = document.createElement('div');

              const recipeName = document.createElement('h3');
              recipeName.textContent = `Name: ${recipe.name}`;
              recipeDetails.appendChild(recipeName);

              const instructionsHeader = document.createElement('h4');
              instructionsHeader.textContent = 'Instructions:';
              recipeDetails.appendChild(instructionsHeader);

              const instructionsList = document.createElement('ul');
              recipe.instructions.forEach(instruction => {
                  const instructionItem = document.createElement('li');
                  instructionItem.textContent = instruction;
                  instructionsList.appendChild(instructionItem);
              });
              recipeDetails.appendChild(instructionsList);

              const ingredientsHeader = document.createElement('h4');
              ingredientsHeader.textContent = 'Ingredients:';
              recipeDetails.appendChild(ingredientsHeader);

              const ingredientsList = document.createElement('ul');
              recipe.ingredients.forEach(ingredient => {
                  const ingredientItem = document.createElement('li');
                  ingredientItem.textContent = ingredient;
                  ingredientsList.appendChild(ingredientItem);
              });
              recipeDetails.appendChild(ingredientsList);

              document.body.appendChild(recipeDetails);
              })
          .catch(error => console.error('Error fetching recipe:', error));

      addIngrident.addEventListener('click', function() {
          const ingredientText = document.getElementById('ingredients-text').value.trim();
          if (ingredientText !== '') {
              const ingredientsList = document.getElementById('ingredients-list');
              const listItem = document.createElement('li');
              listItem.textContent = ingredientText;
              ingredientsList.appendChild(listItem);
              document.getElementById('ingredients-text').value = '';
          }
      });

      addInstruction.addEventListener('click', function() {
          const instructionText = document.getElementById('instructions-text').value.trim();
          if (instructionText !== '') {
              const instructionsList = document.getElementById('instructions-list');
              const listItem = document.createElement('li');
              listItem.textContent = instructionText;
              instructionsList.appendChild(listItem);
              document.getElementById('instructions-text').value = '';
          }
      });

      async function uploadImageAndGetId(file) {
        try {
          const formData = new FormData();
          formData.append('image', file);

          const response = await fetch('http://localhost:3000/image/', {
            method: 'POST',
            body: formData,
          });

          const data = await response.json();
          return data._id; // Assuming the response contains the image ID
        } catch (error) {
          console.error('Error uploading image:', error);
          throw error;
        }
      }

      // Event listener for form submission
      submit.addEventListener('click', async function() {
        try {
          const name = document.getElementById('name-text').value.trim();
          const instructions = Array.from(document.getElementById('instructions-list').children).map(li => li.textContent);
          const ingredients = Array.from(document.getElementById('ingredients-list').children).map(li => li.textContent);
          const selectedCategories = Array.from(document.querySelectorAll('input[name="category"]:checked')).map(checkbox => checkbox.value);

          if (name === '' || instructions.length === 0 || ingredients.length === 0) {
            alert('Please fill in all fields before submitting.');
            return;
          }

          const fileInput = document.getElementById('image-input');
          const imageFile = fileInput.files[0]; // Assuming a single file is selected

          // Upload the image and get the image ID
          const imageId = await uploadImageAndGetId(imageFile);
  
          const data = {
            name: name,
            instructions: instructions,
            ingredients: ingredients,
            categories: selectedCategories,
            images: [imageId] // Add the obtained image ID to the array of image IDs
          };
          

          // Send recipe data to server to save
          const response = await fetch('http://localhost:3000/recipe/', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          });

          const responseData = await response.json();
          console.log(responseData); // Handle response from server as needed
        } catch (error) {
          console.error('Error:', error);
        }
      });


      upload.addEventListener('submit', async function(event) {
              event.preventDefault();
              const imageInput = document.getElementById('image-input');

              if (imageInput.files.length === 0) {
                  alert('Please select at least one image file.');
                  return;
              }

              const formData = new FormData();

              Array.from(imageInput.files).forEach(file => {
                  formData.append('image', file);
              });

              try {
                  const response1 = await fetch('/image/', {
                  method: 'POST',
                  body: formData
                  });

                  if (response1.ok) {
                  alert('Images uploaded successfully');
                  } else {
                  alert('Failed to upload images');
                  }
              } catch (error) {
                  console.error('Error:', error);
                  alert('An error occurred while uploading images.');
              }
      });  
      
      
      document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('search-input');
        const recipeDetails = document.getElementById('recipe-details');

        searchInput.addEventListener('keypress', async function(event) {
          if (event.key === 'Enter') {
            const searchValue = searchInput.value.trim();
            console.log(searchValue);
            try {
              const response = await fetch(`/recipe/${searchValue}`);
              const data = await response.json();
              console.log(response);
              if (response.ok) {
                if (data.recipes && data.recipes.length > 0) {
                  const recipe = data.recipes[0]; 
                  recipeDetails.innerHTML = `
                    <h1>Recipe Details</h1>
                    <div>
                      <p>Name: ${recipe.name}</p>
                      <h3>Instructions:</h3>
                      <ul>
                        ${recipe.instructions.map(instruction => `<li>${instruction}</li>`).join('')}
                      </ul>
                      <h3>Ingredients:</h3>
                      <ul>
                        ${recipe.ingredients.map(ingredient => `<li>${ingredient}</li>`).join('')}
                      </ul>
                    </div>
                  `;
                } else {
                  recipeDetails.innerHTML = '<p>No recipes found</p>';
                }
              } else {
                console.error('Failed to fetch recipes:', data.message);
              }
            } catch (error) {
              console.error('Error fetching recipes:', error);
            }
          }
        });
      });
      function toggleCategory(categoryId) {
        const selectedCategory = document.getElementById(categoryId);
        if (selectedCategory.classList.contains('selected')) {
          selectedCategory.classList.remove('selected');
        } else {
          selectedCategory.classList.add('selected');
        }
    }





      
